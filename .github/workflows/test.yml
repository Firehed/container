name: Test

on:
  push:
    branches:
      - main
  pull_request:
    # Run on all PRs

env:
  CI: "true"

jobs:
  phpunit:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dependencies:
          - 'high'
          - 'low'
        php:
          - '8.1'
          - '8.2'
          - '8.3'
          - '8.4-dev'

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: pcov
          ini-values: zend.assertions=1, assert.exception=1, error_reporting=-1
          php-version: ${{ matrix.php }}

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.dependencies }}-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.dependencies }}-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}
            ${{ runner.os }}-composer-${{ matrix.dependencies }}-${{ matrix.php }}-
            ${{ runner.os }}-composer-${{ matrix.dependencies }}-
            ${{ runner.os }}-composer-

      - name: Install highest dependencies
        if: ${{ matrix.dependencies == 'high' }}
        run: composer update
          --no-ansi
          --no-interaction
          --no-progress
          --no-suggest
          --prefer-dist

      - name: Install lowest dependencies
        if: ${{ matrix.dependencies == 'low' }}
        run: composer update
          --no-ansi
          --no-interaction
          --no-progress
          --no-suggest
          --prefer-dist
          --prefer-lowest

      - name: Configure matchers
        uses: mheap/phpunit-matcher-action@d4addb24dfdb70604a164bc0efa3b5117e84e0bc

      - name: PHPUnit
        run: vendor/bin/phpunit
          --coverage-clover coverage.xml
          --coverage-text
          --teamcity

      - name: Submit code coverage
        if: ${{ always() }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
